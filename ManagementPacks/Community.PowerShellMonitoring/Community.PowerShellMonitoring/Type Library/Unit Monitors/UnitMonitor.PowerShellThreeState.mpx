<ManagementPackFragment SchemaVersion="2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <TypeDefinitions>
    <MonitorTypes>
      <UnitMonitorType ID="Community.PowerShellMonitoring.UnitMonitors.PowerShellThreeState" Accessibility="Public">
        <MonitorTypeStates>
          <MonitorTypeState ID="Healthy"/>
          <MonitorTypeState ID="Warning"/>
          <MonitorTypeState ID="Unhealthy"/>
        </MonitorTypeStates>
        <Configuration>
          <IncludeSchemaTypes>
            <SchemaType>System!System.ExpressionEvaluatorSchema</SchemaType>
          </IncludeSchemaTypes>
          <xsd:element name="IntervalSeconds" type="xsd:int" minOccurs="1" maxOccurs="1"/>
          <xsd:element minOccurs="1" name="SyncTime" type="xsd:string" />
          <xsd:element minOccurs="1" name="ScriptName" type="xsd:string" />
          <xsd:element minOccurs="1" name="ScriptBody" type="xsd:string" />
          <xsd:element minOccurs="0" name="Arguments" type="xsd:string" />
          <xsd:element minOccurs="1" name="TimeoutSeconds" type="xsd:integer" />
          <xsd:element minOccurs="1" name="UnhealthyExpression" type="ExpressionType" />
          <xsd:element minOccurs="1" name="WarningExpression" type="ExpressionType" />
          <xsd:element minOccurs="1" name="HealthyExpression" type="ExpressionType" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
          <OverrideableParameter ID="Arguments" Selector="$Config/Arguments$" ParameterType="string" />
        </OverrideableParameters>
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="Timer" TypeID="System!System.SimpleScheduler">
              <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
              <SyncTime>$Config/SyncTime$</SyncTime>
            </DataSource>
            <ProbeAction ID="Probe" TypeID="Windows!Microsoft.Windows.PowerShellPropertyBagTriggerOnlyProbe">
              <ScriptName>$Config/ScriptName$</ScriptName>
              <ScriptBody>$Config/ScriptBody$</ScriptBody>
              <Parameters>
                <Parameter>
                  <Name>Arguments</Name>
                  <Value>$Config/Arguments$</Value>
                </Parameter>
              </Parameters>
              <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
            </ProbeAction>
            <ConditionDetection ID="HealthyFilter" TypeID="System!System.ExpressionFilter">
              <Expression>$Config/HealthyExpression$</Expression>
            </ConditionDetection>
            <ConditionDetection ID="UnhealthyFilter" TypeID="System!System.ExpressionFilter">
              <Expression>$Config/UnhealthyExpression$</Expression>
            </ConditionDetection>
            <ConditionDetection ID="WarningFilter" TypeID="System!System.ExpressionFilter">
              <Expression>$Config/WarningExpression$</Expression>
            </ConditionDetection>
          </MemberModules>
          <RegularDetections>
            <RegularDetection MonitorTypeStateID="Healthy">
              <Node ID="HealthyFilter">
                <Node ID="Probe">
                  <Node ID="Timer" />
                </Node>
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="Warning">
              <Node ID="WarningFilter">
                <Node ID="Probe">
                  <Node ID="Timer" />
                </Node>
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="Unhealthy">
              <Node ID="UnhealthyFilter">
                <Node ID="Probe">
                  <Node ID="Timer" />
                </Node>
              </Node>
            </RegularDetection>
          </RegularDetections>
          <OnDemandDetections>
            <OnDemandDetection MonitorTypeStateID="Healthy">
              <Node ID="HealthyFilter">
                <Node ID="Probe" />
              </Node>
            </OnDemandDetection>
            <OnDemandDetection MonitorTypeStateID="Warning">
              <Node ID="WarningFilter">
                <Node ID="Probe" />
              </Node>
            </OnDemandDetection>
            <OnDemandDetection MonitorTypeStateID="Unhealthy">
              <Node ID="UnhealthyFilter">
                <Node ID="Probe" />
              </Node>
            </OnDemandDetection>
          </OnDemandDetections>
        </MonitorImplementation>
      </UnitMonitorType>
    </MonitorTypes>
  </TypeDefinitions>
  <PresentationTypes>
    <UIPageSets>
      <UIPageSet ID="Community.PowerShellMonitoring.PageSet.Template.PowerShellMonitor.ThreeState" TypeDefinitionID="Community.PowerShellMonitoring.UnitMonitors.PowerShellThreeState">
        <UIPageReferences>
          <UIPageReference ID="Community.PowerShellMonitoring.PageSet.Template.PowerShellMonitor.ThreeState.Page.General" PageID="Health!System.Health.MonitorGeneralPage" Usage="CreationAndUpdate" />
          <UIPageReference ID="Community.PowerShellMonitoring.PageSet.Template.PowerShellMonitor.ThreeState.Page.Schedule.Create" PageID="System!System.SimpleSchedulerPage" Usage="CreationOnly">
            <InputTransform>
              <xsl:stylesheet version="1.0">
                <xsl:output method="xml" indent="yes" omit-xml-declaration="yes" />
                <xsl:template match="/">
                  <xsl:element name="SimpleReccuringSchedule">
                    <xsl:element name="Interval">
                      <xsl:attribute name="Unit">Minutes</xsl:attribute>15
                    </xsl:element>
                  </xsl:element>
                </xsl:template>
              </xsl:stylesheet>
            </InputTransform>
            <Title ID="Microsoft.Windows.ScriptBased.ThreeStateMonitorPageSet.Reference2C.Title" />
            <TabName ID="Microsoft.Windows.ScriptBased.ThreeStateMonitorPageSet.Reference2C.TabName" />
          </UIPageReference>
          <UIPageReference ID="Community.PowerShellMonitoring.PageSet.Template.PowerShellMonitor.ThreeState.Page.Schedule.Update" PageID="System!System.SimpleSchedulerPage" Usage="UpdateOnly">
            <InputTransform>
              <xsl:stylesheet version="1.0">
                <xsl:output method="xml" indent="yes" omit-xml-declaration="yes" />
                <xsl:template match="/">
                  <xsl:element name="SimpleReccuringSchedule">
                    <xsl:element name="Interval">
                      <xsl:value-of select="/IntervalSeconds" />
                    </xsl:element>
                    <xsl:if test="boolean(string-length(/SyncTime))">
                      <xsl:copy-of select="/SyncTime" />
                    </xsl:if>
                  </xsl:element>
                </xsl:template>
              </xsl:stylesheet>
            </InputTransform>
            <Title ID="Microsoft.Windows.ScriptBased.ThreeStateMonitorPageSet.Reference2U.Title" />
            <TabName ID="Microsoft.Windows.ScriptBased.ThreeStateMonitorPageSet.Reference2U.TabName" />
          </UIPageReference>
          <UIPageReference ID="Community.PowerShellMonitoring.PageSet.Template.PowerShellMonitor.ThreeState.Page.Script" PageID="Windows!Microsoft.Windows.ScriptPage" Usage="CreationAndUpdate">
            <InputParameters>
              <ScriptName>MyScript.ps1</ScriptName>
              <ScriptBody>$IncludeFileContent/Resources/Scripts/ThreeHealthState.ps1$</ScriptBody>
            </InputParameters>
            <InputTransform>
              <xsl:stylesheet version="1.0">
                <xsl:output method="xml" indent="yes" omit-xml-declaration="yes" />
                <xsl:template match="/">
                  <xsl:copy-of select="/ScriptName" />
                  <xsl:copy-of select="/Arguments" />
                  <xsl:copy-of select="/ScriptBody" />
                  <xsl:copy-of select="/TimeoutSeconds" />
                </xsl:template>
              </xsl:stylesheet>
            </InputTransform>
            <Title ID="Microsoft.Windows.ScriptBased.ThreeStateMonitorPageSet.Reference3.Title" />
            <TabName ID="Microsoft.Windows.ScriptBased.ThreeStateMonitorPageSet.Reference3.TabName" />
          </UIPageReference>
          <UIPageReference ID="Community.PowerShellMonitoring.PageSet.Template.PowerShellMonitor.ThreeState.Page.UnhealthyExpression" PageID="System!System.ExpressionBuilderPage" Usage="CreationAndUpdate">
            <InputParameters>
              <DataType>System.PropertyBagData</DataType>
            </InputParameters>
            <InputTransform>
              <xsl:stylesheet version="1.0">
                <xsl:output method="xml" indent="yes" omit-xml-declaration="yes" />
                <xsl:template match="/">
                  <xsl:choose>
                    <xsl:when test="count(/UnhealthyExpression) &gt; 0">
                      <xsl:element name="Expression">
                        <xsl:copy-of select="/UnhealthyExpression/*" />
                      </xsl:element>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:element name="Expression">
                        <xsl:element name="SimpleExpression">
                          <xsl:element name="ValueExpression">
                            <xsl:element name="XPathQuery">Property[@Name='State']</xsl:element>
                          </xsl:element>
                          <xsl:element name="Operator">Equal</xsl:element>
                          <xsl:element name="ValueExpression">
                            <xsl:element name="Value">OverUpperThreshold</xsl:element>
                          </xsl:element>
                        </xsl:element>
                      </xsl:element>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:template>
              </xsl:stylesheet>
            </InputTransform>
            <Title ID="Title" />
            <TabName ID="TabName" />
          </UIPageReference>
          <UIPageReference ID="Community.PowerShellMonitoring.PageSet.Template.PowerShellMonitor.ThreeState.Page.WarningExpression" PageID="System!System.ExpressionBuilderPage" Usage="CreationAndUpdate">
            <InputParameters>
              <DataType>System.PropertyBagData</DataType>
            </InputParameters>
            <InputTransform>
              <xsl:stylesheet version="1.0">
                <xsl:output method="xml" indent="yes" omit-xml-declaration="yes" />
                <xsl:template match="/">
                  <xsl:choose>
                    <xsl:when test="count(/WarningExpression) &gt; 0">
                      <xsl:element name="Expression">
                        <xsl:copy-of select="/WarningExpression/*" />
                      </xsl:element>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:element name="Expression">
                        <xsl:element name="SimpleExpression">
                          <xsl:element name="ValueExpression">
                            <xsl:element name="XPathQuery">Property[@Name='State']</xsl:element>
                          </xsl:element>
                          <xsl:element name="Operator">Equal</xsl:element>
                          <xsl:element name="ValueExpression">
                            <xsl:element name="Value">OverMiddleThreshold</xsl:element>
                          </xsl:element>
                        </xsl:element>
                      </xsl:element>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:template>
              </xsl:stylesheet>
            </InputTransform>
            <Title ID="Title" />
            <TabName ID="TabName" />
          </UIPageReference>
          <UIPageReference ID="Community.PowerShellMonitoring.PageSet.Template.PowerShellMonitor.ThreeState.Page.HealthyExpression" PageID="System!System.ExpressionBuilderPage" Usage="CreationAndUpdate">
            <InputParameters>
              <DataType>System.PropertyBagData</DataType>
            </InputParameters>
            <InputTransform>
              <xsl:stylesheet version="1.0">
                <xsl:output method="xml" indent="yes" omit-xml-declaration="yes" />
                <xsl:template match="/">
                  <xsl:choose>
                    <xsl:when test="count(/HealthyExpression) &gt; 0">
                      <xsl:element name="Expression">
                        <xsl:copy-of select="/HealthyExpression/*" />
                      </xsl:element>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:element name="Expression">
                        <xsl:element name="SimpleExpression">
                          <xsl:element name="ValueExpression">
                            <xsl:element name="XPathQuery">Property[@Name='State']</xsl:element>
                          </xsl:element>
                          <xsl:element name="Operator">Equal</xsl:element>
                          <xsl:element name="ValueExpression">
                            <xsl:element name="Value">UnderThreshold</xsl:element>
                          </xsl:element>
                        </xsl:element>
                      </xsl:element>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:template>
              </xsl:stylesheet>
            </InputTransform>
            <Title ID="Title" />
            <TabName ID="TabName" />
          </UIPageReference>
          <UIPageReference ID="Community.PowerShellMonitoring.PageSet.Template.PowerShellMonitor.ThreeState.Page.StateConfig" PageID="Health!System.Health.OperationalStatesConfigPage" Usage="CreationAndUpdate">
            <InputParameters>
              <Healthy>Success</Healthy>
              <Warning>Warning</Warning>
              <Unhealthy>Error</Unhealthy>
            </InputParameters>
          </UIPageReference>
          <UIPageReference ID="Community.PowerShellMonitoring.PageSet.Template.PowerShellMonitor.ThreeState.Page.Alert" PageID="Health!System.Health.AlertingPage" Usage="CreationAndUpdate" />
          <UIPageReference ID="Community.PowerShellMonitoring.PageSet.Template.PowerShellMonitor.ThreeState.Page.Diagnostics" PageID="Health!System.Health.DiagnosticAndRecoveryPage" Usage="UpdateOnly" />
          <UIPageReference ID="Community.PowerShellMonitoring.PageSet.Template.PowerShellMonitor.ThreeState.Page.ProductKnowledge" PageID="Health!System.Health.ProductKnowledgePage" Usage="UpdateOnly" />
          <UIPageReference ID="Community.PowerShellMonitoring.PageSet.Template.PowerShellMonitor.ThreeState.Page.CompanyKnowledge" PageID="Health!System.Health.CompanyKnowledgePage" Usage="UpdateOnly" />
        </UIPageReferences>
        <OutputTransform>
          <xsl:stylesheet version="1.0">
            <xsl:output method="xml" indent="yes" omit-xml-declaration="yes" />
            <xsl:template match="/">
              <xsl:element name="IntervalSeconds">
                <xsl:variable name="RawInterval" select="/SimpleReccuringSchedule/Interval" />
                <xsl:variable name="Units" select="/SimpleReccuringSchedule/Interval/@Unit" />
                <xsl:choose>
                  <xsl:when test="not(boolean($Units)) or $Units='Seconds'">
                    <xsl:value-of select="$RawInterval" />
                  </xsl:when>
                  <xsl:when test="$Units='Minutes'">
                    <xsl:value-of select="$RawInterval*60" />
                  </xsl:when>
                  <xsl:when test="$Units='Hours'">
                    <xsl:value-of select="$RawInterval*3600" />
                  </xsl:when>
                  <xsl:when test="$Units='Days'">
                    <xsl:value-of select="$RawInterval*86400" />
                  </xsl:when>
                </xsl:choose>
              </xsl:element>
              <xsl:element name="SyncTime">
                <xsl:value-of select="/SimpleReccuringSchedule/SyncTime" />
              </xsl:element>
              <xsl:element name="ScriptName">
                <xsl:value-of select="/ScriptName[1]" />
              </xsl:element>
              <xsl:element name="ScriptBody">
                <xsl:value-of select="/ScriptBody[1]" />
              </xsl:element>
              <xsl:element name="Arguments">
                <xsl:value-of select="/Arguments[1]" />
              </xsl:element>
              <xsl:element name="TimeoutSeconds">
                <xsl:value-of select="/TimeoutSeconds[1]" />
              </xsl:element>
              <xsl:element name="UnhealthyExpression">
                <xsl:copy-of select="/Expression[1]/*" />
              </xsl:element>
              <xsl:element name="WarningExpression">
                <xsl:copy-of select="/Expression[2]/*" />
              </xsl:element>
              <xsl:element name="HealthyExpression">
                <xsl:copy-of select="/Expression[3]/*" />
              </xsl:element>
            </xsl:template>
          </xsl:stylesheet>
        </OutputTransform>
      </UIPageSet>
    </UIPageSets>
  </PresentationTypes>
  <Presentation>
    <FolderItems>
      <FolderItem ID="Community.PowerShellMonitoring.FolderItem.Template.UnitMonitors.PowerShellThreeState.Scripting.PowerShellBased" ElementID="Community.PowerShellMonitoring.UnitMonitors.PowerShellThreeState" Folder="Community.PowerShellMonitoring.Folders.Authoring.Monitors.Scripting.PowerShellBased"/>
    </FolderItems>
  </Presentation>
  <LanguagePacks>
    <LanguagePack ID="ENU" IsDefault="true">
      <DisplayStrings>
        <DisplayString ElementID="Community.PowerShellMonitoring.UnitMonitors.PowerShellThreeState">
          <Name>PowerShell Script Three State Monitor (Community)</Name>
          <Description>A three state monitor powered by a PowerShell script.  Remember when setting the alert settings to raise an alert on critical or warning state, and to set the severity to "match monitor severity".</Description>
        </DisplayString>
        <DisplayString ElementID="Community.PowerShellMonitoring.UnitMonitors.PowerShellThreeState" SubElementID="Arguments">
          <Name>Arguments</Name>
          <Description>Arguments passed to the script as a string.</Description>
        </DisplayString>
        <DisplayString ElementID="Community.PowerShellMonitoring.UnitMonitors.PowerShellThreeState" SubElementID="Healthy">
          <Name>Healthy</Name>
          <Description>Healthy state</Description>
        </DisplayString>
        <DisplayString ElementID="Community.PowerShellMonitoring.UnitMonitors.PowerShellThreeState" SubElementID="IntervalSeconds">
          <Name>Interval (Seconds)</Name>
          <Description>The number of seconds between monitor executions.</Description>
        </DisplayString>
        <DisplayString ElementID="Community.PowerShellMonitoring.UnitMonitors.PowerShellThreeState" SubElementID="SyncTime">
          <Name>Sync Time (hh:mm)</Name>
          <Description>The time at which this monitors executions should be sychronised around.</Description>
        </DisplayString>
        <DisplayString ElementID="Community.PowerShellMonitoring.UnitMonitors.PowerShellThreeState" SubElementID="TimeoutSeconds">
          <Name>Timeout (Seconds)</Name>
          <Description>The length of time the script has to complete before it is terminated.</Description>
        </DisplayString>
        <DisplayString ElementID="Community.PowerShellMonitoring.UnitMonitors.PowerShellThreeState" SubElementID="Unhealthy">
          <Name>Unhealthy</Name>
          <Description>Unhealthy state</Description>
        </DisplayString>
        <DisplayString ElementID="Community.PowerShellMonitoring.UnitMonitors.PowerShellThreeState" SubElementID="Warning">
          <Name>Warning</Name>
          <Description>Warning state</Description>
        </DisplayString>
        <DisplayString ElementID="Community.PowerShellMonitoring.PageSet.Template.PowerShellMonitor.ThreeState.Page.UnhealthyExpression" SubElementID="TabName">
          <Name>Unhealthy Expression</Name>
        </DisplayString>
        <DisplayString ElementID="Community.PowerShellMonitoring.PageSet.Template.PowerShellMonitor.ThreeState.Page.UnhealthyExpression" SubElementID="Title">
          <Name>Unhealthy Expression</Name>
        </DisplayString>
        <DisplayString ElementID="Community.PowerShellMonitoring.PageSet.Template.PowerShellMonitor.ThreeState.Page.HealthyExpression" SubElementID="TabName">
          <Name>Healthy Expression</Name>
        </DisplayString>
        <DisplayString ElementID="Community.PowerShellMonitoring.PageSet.Template.PowerShellMonitor.ThreeState.Page.HealthyExpression" SubElementID="Title">
          <Name>Healthy Expression</Name>
        </DisplayString>
        <DisplayString ElementID="Community.PowerShellMonitoring.PageSet.Template.PowerShellMonitor.ThreeState.Page.WarningExpression" SubElementID="Title">
          <Name>Warning Expression</Name>
        </DisplayString>
        <DisplayString ElementID="Community.PowerShellMonitoring.PageSet.Template.PowerShellMonitor.ThreeState.Page.WarningExpression" SubElementID="TabName">
          <Name>Warning Expression</Name>
        </DisplayString>
      </DisplayStrings>
    </LanguagePack>
  </LanguagePacks>
</ManagementPackFragment>
